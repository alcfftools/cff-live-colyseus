{"version":3,"sources":["../../state/GameState.ts"],"names":[],"mappings":"AAAA,QAAQ,qCAAqC;AAC7C,QAAQ,SAAS;AACjB,QAAQ,8BAA8B;;;AAGtC;;AAEA,WAAW,eAAe;AAC1B;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C","file":"scripts.js","sourcesContent":["import {Schema, ArraySchema, MapSchema, type} from \"@colyseus/schema\";\r\nimport { Player } from \"../backend/Player\";\r\nimport { Classification, PlayerValue } from \"./Classification\";\r\n\r\n\r\nexport class GameState extends Schema {\r\n\r\n    @type({map : \"string\"})\r\n    players : MapSchema<string>;\r\n\r\n    @type(\"number\")\r\n    turn_time: number;\r\n\r\n    @type(\"number\")\r\n    sector: number;\r\n\r\n    @type(\"boolean\")\r\n    running: boolean;\r\n\r\n    @type([Classification])\r\n    classification = new ArraySchema<Classification>();\r\n\r\n    constructor(init_clock: number) {\r\n        super();\r\n        this.turn_time = init_clock;\r\n        this.sector = 0;\r\n        this.running = false;\r\n        this.players = new MapSchema<string>();\r\n        this.classification = new ArraySchema<Classification>();\r\n    }\r\n}"],"sourceRoot":"webpack:///"}